#include "../util/globals.h"

struct VK
{
	unsigned char code;
	string name;
};
VK VKshift[] = {
{0x30,")"},
{0x31,"!"},
{0x32,"@"},
{0x33,"#"},
{0x34,"$"},
{0x35,"%"},
{0x36,"^"},
{0x37,"&"},
{0x38,"*"},
{0x39,"("},
{0x41,"A"},
{0x42,"B"},
{0x43,"C"},
{0x44,"D"},
{0x45,"E"},
{0x46,"F"},
{0x47,"G"},
{0x48,"H"},
{0x49,"I"},
{0x4A,"J"},
{0x4B,"K"},
{0x4C,"L"},
{0x4D,"M"},
{0x4E,"N"},
{0x4F,"O"},
{0x50,"P"},
{0x51,"Q"},
{0x52,"R"},
{0x53,"S"},
{0x54,"T"},
{0x55,"U"},
{0x56,"V"},
{0x57,"W"},
{0x58,"X"},
{0x59,"Y"},
{0x5A,"Z"},
{VK_OEM_1,":"},
{0xBB,"+"},
{0xBC,"<"},
{0xBD,"_"},
{0xBE,">"},
{VK_OEM_2,"?"},
{VK_OEM_3,"~"},
{VK_OEM_4,"{"},
{VK_OEM_6,"}"},
{VK_OEM_7,"\""},
{0xE2,"|"}//key102
};
VK VKtable[] = {
{VK_LBUTTON,"mouse1"},
{VK_RBUTTON,"mouse2"},
{VK_CANCEL,"control-break"},
{VK_MBUTTON,"mouse3"},
{0x05,"mouse4"},
{0x06,"mouse5"},
{0x07,"undefined-1"},
{VK_BACK,"backspace"},
{VK_TAB,"tab"},
{0x0A,"reserved-1"},
{0x0B,"reserved-2"},
{VK_CLEAR,"clear"},
{VK_RETURN,"enter"},
{0x0E,"undefined-2"},
{0x0F,"undefined-3"},
{VK_SHIFT,"shift"},
{VK_CONTROL,"ctrl"},
{VK_MENU,"alt"},
{VK_PAUSE,"pause"},
{VK_CAPITAL,"capslock"},
{VK_KANA,"kana"},
{VK_HANGUL,"hangul"},
{0x16,"undefined-4"},
{VK_JUNJA,"junja"},
{VK_FINAL,"final"},
{VK_HANJA,"hanja"},
{VK_KANJI,"kanji"},
{0x1A,"undefined-5"},
{VK_ESCAPE,"esc"},
{VK_CONVERT,"convert"},
{VK_NONCONVERT,"nonconvert"},
{VK_ACCEPT,"accept"},
{VK_MODECHANGE,"modechange"},
{VK_SPACE,"space"},
{VK_PRIOR,"pgup"},
{VK_NEXT,"pgdn"},
{VK_END,"end"},
{VK_HOME,"home"},
{VK_LEFT,"leftarrow"},
{VK_UP,"uparrow"},
{VK_RIGHT,"rightarrow"},
{VK_DOWN,"downarrow"},
{VK_SELECT,"select"},
{VK_PRINT,"print"},
{VK_EXECUTE,"execute"},
{VK_SNAPSHOT,"printscreen"},
{VK_INSERT,"insert"},
{VK_DELETE,"delete"},
{VK_HELP,"help"},
{0x30,"0"},
{0x31,"1"},
{0x32,"2"},
{0x33,"3"},
{0x34,"4"},
{0x35,"5"},
{0x36,"6"},
{0x37,"7"},
{0x38,"8"},
{0x39,"9"},
{0x3A,"undefined-6"},
{0x3B,"undefined-7"},
{0x3C,"undefined-8"},
{0x3D,"undefined-9"},
{0x3E,"undefined-10"},
{0x3F,"undefined-11"},
{0x40,"undefined-12"},
{0x41,"a"},
{0x42,"b"},
{0x43,"c"},
{0x44,"d"},
{0x45,"e"},
{0x46,"f"},
{0x47,"g"},
{0x48,"h"},
{0x49,"i"},
{0x4A,"j"},
{0x4B,"k"},
{0x4C,"l"},
{0x4D,"m"},
{0x4E,"n"},
{0x4F,"o"},
{0x50,"p"},
{0x51,"q"},
{0x52,"r"},
{0x53,"s"},
{0x54,"t"},
{0x55,"u"},
{0x56,"v"},
{0x57,"w"},
{0x58,"x"},
{0x59,"y"},
{0x5A,"z"},
{VK_LWIN,"lwindows"},
{VK_RWIN,"rwindows"},
{VK_APPS,"apps"},
{0x5E,"reserved-3"},
{VK_SLEEP,"sleep"},
{VK_NUMPAD0,"num0"},
{VK_NUMPAD1,"num1"},
{VK_NUMPAD2,"num2"},
{VK_NUMPAD3,"num3"},
{VK_NUMPAD4,"num4"},
{VK_NUMPAD5,"num5"},
{VK_NUMPAD6,"num6"},
{VK_NUMPAD7,"num7"},
{VK_NUMPAD8,"num8"},
{VK_NUMPAD9,"num9"},
{VK_MULTIPLY,"num*"},
{VK_ADD,"num+"},
{VK_SEPARATOR,"separator"},
{VK_SUBTRACT,"num-"},
{VK_DECIMAL,"num."},
{VK_DIVIDE,"num/"},
{VK_F1,"F1"},
{VK_F2,"F2"},
{VK_F3,"F3"},
{VK_F4,"F4"},
{VK_F5,"F5"},
{VK_F6,"F6"},
{VK_F7,"F7"},
{VK_F8,"F8"},
{VK_F9,"F9"},
{VK_F10,"F10"},
{VK_F11,"F11"},
{VK_F12,"F12"},
{VK_F13,"F13"},
{VK_F14,"F14"},
{VK_F15,"F15"},
{VK_F16,"F16"},
{VK_F17,"F17"},
{VK_F18,"F18"},
{VK_F19,"F19"},
{VK_F20,"F20"},
{VK_F21,"F21"},
{VK_F22,"F22"},
{VK_F23,"F23"},
{VK_F24,"F24"},
{0x88,"unassigned-1"},
{0x89,"unassigned-2"},
{0x8A,"unassigned-3"},
{0x8B,"unassigned-4"},
{0x8C,"unassigned-5"},
{0x8D,"unassigned-6"},
{0x8E,"unassigned-7"},
{0x8F,"unassigned-8"},
{VK_NUMLOCK,"numlock"},
{VK_SCROLL,"scrolllock"},
{0x92,"OEM-1"},
{0x93,"OEM-2"},
{0x94,"OEM-3"},
{0x95,"OEM-4"},
{0x96,"OEM-5"},
{0x97,"unassigned-9"},
{0x98,"unassigned-10"},
{0x99,"unassigned-11"},
{0x9A,"unassigned-12"},
{0x9B,"unassigned-13"},
{0x9C,"unassigned-14"},
{0x9D,"unassigned-15"},
{0x9E,"unassigned-16"},
{0x9F,"unassigned-17"},
{VK_LSHIFT,"lshift"},
{VK_RSHIFT,"rshift"},
{VK_LCONTROL,"lctrl"},
{VK_RCONTROL,"rctrl"},
{VK_LMENU,"lalt"},
{VK_RMENU,"ralt"},
{0xA6,"browserback"},
{0xA7,"browserforward"},
{0xA8,"browserrefresh"},
{0xA9,"browserstop"},
{0xAA,"browsersearch"},
{0xAB,"browserfavorites"},
{0xAC,"browserhome"},
{0xAD,"volumemute"},
{0xAE,"volumedown"},
{0xAF,"volumeup"},
{0xB0,"nexttrack"},
{0xB1,"prevtrack"},
{0xB2,"mediastop"},
{0xB3,"mediaplaypause"},
{0xB4,"mail"},
{0xB5,"selectmedia"},
{0xB6,"startapp1"},
{0xB7,"startapp2"},
{0xB8,"reserved-4"},
{0xB9,"reserved-5"},
{VK_OEM_1,";"},
{0xBB,"="},
{0xBC,","},
{0xBD,"-"},
{0xBE,"."},
{VK_OEM_2,"/"},
{VK_OEM_3,"`"},
{0xC1,"reserved-6"},
{0xC2,"reserved-7"},
{0xC3,"reserved-8"},
{0xC4,"reserved-9"},
{0xC5,"reserved-10"},
{0xC6,"reserved-11"},
{0xC7,"reserved-12"},
{0xC8,"reserved-13"},
{0xC9,"reserved-14"},
{0xCA,"reserved-15"},
{0xCB,"reserved-16"},
{0xCC,"reserved-17"},
{0xCD,"reserved-18"},
{0xCE,"reserved-19"},
{0xCF,"reserved-20"},
{0xD0,"reserved-21"},
{0xD1,"reserved-22"},
{0xD2,"reserved-23"},
{0xD3,"reserved-24"},
{0xD4,"reserved-25"},
{0xD5,"reserved-26"},
{0xD6,"reserved-27"},
{0xD7,"reserved-28"},
{0xD8,"unassigned-18"},
{0xD9,"unassigned-19"},
{0xDA,"unassigned-20"},
{VK_OEM_4,"["},
{VK_OEM_5,"OEM-26"},
{VK_OEM_6,"]"},
{VK_OEM_7,"'"},
{VK_OEM_8,"OEM-8"},
{0xE0,"reserved-29"},
{0xE1,"OEM-9"},
{0xE2,"\\"},//key102
{0xE3,"OEM-10"},
{0xE4,"OEM-11"},
{VK_PROCESSKEY,"process"},
{0xE6,"OEM-12"},
{0xE7,"unicode_packet"},
{0xE8,"unassigned-21"},
{0xE9,"OEM-13"},
{0xEA,"OEM-14"},
{0xEB,"OEM-15"},
{0xEC,"OEM-16"},
{0xED,"OEM-17"},
{0xEE,"OEM-18"},
{0xEF,"OEM-19"},
{0xF0,"OEM-20"},
{0xF1,"OEM-21"},
{0xF2,"OEM-22"},
{0xF3,"OEM-23"},
{0xF4,"OEM-24"},
{0xF5,"OEM-25"},
{VK_ATTN,"attn"},
{VK_CRSEL,"crsel"},
{VK_EXSEL,"exsel"},
{VK_EREOF,"eraseEOF"},
{VK_PLAY,"play"},
{VK_ZOOM,"zoom"},
{VK_NONAME,"noname"},
{VK_PA1,"PA1"},
{VK_OEM_CLEAR,"clear"}
};

string VKtoString(unsigned char code)
{
	for(int I = 0; I<255; I++)
	{
		if(VKtable[I].code == code)
		{
			return VKtable[I].name;
		}
	}
	return "impossible_char_code_"+itoa(code);
}

//**************************************
// Name: Translate WM code to coresponding message as a string
// Description:This code translates a window message code to the corresponding window message as a string. So, if you give code 5, this function will return WM_PAINT as a string.
// By: 
//
// Inputs:The code, and a char array.

//
// Assumes:For some strange reason the code looks strange in the browser.. just copy it...
//
//This code is copyrighted and has// limited warranties.Please see http://www.Planet-Source-Code.com/vb/scripts/ShowCode.asp?txtCodeId=1468&lngWId=3//for details.//**************************************

// The messages...
struct WMArray {
 UINT Code;
 char Message[100];
} waWMArray[] = {
{0x0000, "WM_NULL"},{0x0001, "WM_CREATE"},{0x0002, "WM_DESTROY"},{0x0003, "WM_MOVE"},
{0x0005, "WM_SIZE"},{0x0006, "WM_ACTIVATE"},{0x0007, "WM_SETFOCUS"},{0x0008, "WM_KILLFOCUS"},
{0x000A, "WM_ENABLE"},{0x000B, "WM_SETREDRAW"},{0x000C, "WM_SETTEXT"},{0x000D, "WM_GETTEXT"},
{0x000E, "WM_GETTEXTLENGTH"},{0x000F, "WM_PAINT"},{0x0010, "WM_CLOSE"},{0x0011, "WM_QUERYENDSESSION"},
{0x0012, "WM_QUIT"},{0x0013, "WM_QUERYOPEN"},{0x0014, "WM_ERASEBKGND"},{0x0015, "WM_SYSCOLORCHANGE"},
{0x0016, "WM_ENDSESSION"},{0x0018, "WM_SHOWWINDOW"},{0x001A, "WM_WININICHANGE"},{WM_WININICHANGE, "WM_SETTINGCHANGE"},
{0x001B, "WM_DEVMODECHANGE"},{0x001C, "WM_ACTIVATEAPP"},{0x001D, "WM_FONTCHANGE"},{0x001E, "WM_TIMECHANGE"},
{0x001F, "WM_CANCELMODE"},{0x0020, "WM_SETCURSOR"},{0x0021, "WM_MOUSEACTIVATE"},{0x0022, "WM_CHILDACTIVATE"},
{0x0023, "WM_QUEUESYNC"},{0x0024, "WM_GETMINMAXINFO"},{0x0026, "WM_PAINTICON"},{0x0027, "WM_ICONERASEBKGND"},
{0x0028, "WM_NEXTDLGCTL"},{0x002A, "WM_SPOOLERSTATUS"},{0x002B, "WM_DRAWITEM"},{0x002C, "WM_MEASUREITEM"},
{0x002D, "WM_DELETEITEM"},{0x002E, "WM_VKEYTOITEM"},{0x002F, "WM_CHARTOITEM"},{0x0030, "WM_SETFONT"},
{0x0031, "WM_GETFONT"},{0x0032, "WM_SETHOTKEY"},{0x0033, "WM_GETHOTKEY"},{0x0037, "WM_QUERYDRAGICON"},
{0x0039, "WM_COMPAREITEM"},{0x003D, "WM_GETOBJECT"},{0x0041, "WM_COMPACTING"},{0x0044, "WM_COMMNOTIFY"},
{0x0046, "WM_WINDOWPOSCHANGING"},{0x0047, "WM_WINDOWPOSCHANGED"},{0x0048, "WM_POWER"},{0x004A, "WM_COPYDATA"},
{0x004B, "WM_CANCELJOURNAL"},{0x004E, "WM_NOTIFY"},{0x0050, "WM_INPUTLANGCHANGEREQUEST"},{0x0051, "WM_INPUTLANGCHANGE"},
{0x0052, "WM_TCARD"},{0x0053, "WM_HELP"},{0x0054, "WM_USERCHANGED"},{0x0055, "WM_NOTIFYFORMAT"},
{0x007B, "WM_CONTEXTMENU"},{0x007C, "WM_STYLECHANGING"},{0x007D, "WM_STYLECHANGED"},{0x007E, "WM_DISPLAYCHANGE"},
{0x007F, "WM_GETICON"},{0x0080, "WM_SETICON"},{0x0081, "WM_NCCREATE"},{0x0082, "WM_NCDESTROY"},
{0x0083, "WM_NCCALCSIZE"},{0x0084, "WM_NCHITTEST"},{0x0085, "WM_NCPAINT"},{0x0086, "WM_NCACTIVATE"},
{0x0087, "WM_GETDLGCODE"},{0x0088, "WM_SYNCPAINT"},{0x00A0, "WM_NCMOUSEMOVE"},{0x00A1, "WM_NCLBUTTONDOWN"},
{0x00A2, "WM_NCLBUTTONUP"},{0x00A3, "WM_NCLBUTTONDBLCLK"},{0x00A4, "WM_NCRBUTTONDOWN"},{0x00A5, "WM_NCRBUTTONUP"},
{0x00A6, "WM_NCRBUTTONDBLCLK"},{0x00A7, "WM_NCMBUTTONDOWN"},{0x00A8, "WM_NCMBUTTONUP"},{0x00A9, "WM_NCMBUTTONDBLCLK"},
{0x0100, "WM_KEYDOWN"},{0x0101, "WM_KEYUP"},{0x0102, "WM_CHAR"},
{0x0103, "WM_DEADCHAR"},{0x0104, "WM_SYSKEYDOWN"},{0x0105, "WM_SYSKEYUP"},{0x0106, "WM_SYSCHAR"},
{0x0107, "WM_SYSDEADCHAR"},{0x0108, "WM_KEYLAST"},{0x010D, "WM_IME_STARTCOMPOSITION"},{0x010E, "WM_IME_ENDCOMPOSITION"},
{0x010F, "WM_IME_COMPOSITION"},{0x010F, "WM_IME_KEYLAST"},{0x0110, "WM_INITDIALOG"},{0x0111, "WM_COMMAND"},
{0x0112, "WM_SYSCOMMAND"},{0x0113, "WM_TIMER"},{0x0114, "WM_HSCROLL"},{0x0115, "WM_VSCROLL"},
{0x0116, "WM_INITMENU"},{0x0117, "WM_INITMENUPOPUP"},{0x011F, "WM_MENUSELECT"},{0x0120, "WM_MENUCHAR"},
{0x0121, "WM_ENTERIDLE"},{0x0122, "WM_MENURBUTTONUP"},{0x0123, "WM_MENUDRAG"},{0x0124, "WM_MENUGETOBJECT"},
{0x0125, "WM_UNINITMENUPOPUP"},{0x0126, "WM_MENUCOMMAND"},{0x0132, "WM_CTLCOLORMSGBOX"},{0x0133, "WM_CTLCOLOREDIT"},
{0x0134, "WM_CTLCOLORLISTBOX"},{0x0135, "WM_CTLCOLORBTN"},{0x0136, "WM_CTLCOLORDLG"},{0x0137, "WM_CTLCOLORSCROLLBAR"},
{0x0138, "WM_CTLCOLORSTATIC"},{0x0200, "WM_MOUSEFIRST"},{0x0200, "WM_MOUSEMOVE"},{0x0201, "WM_LBUTTONDOWN"},
{0x0202, "WM_LBUTTONUP"},{0x0203, "WM_LBUTTONDBLCLK"},{0x0204, "WM_RBUTTONDOWN"},{0x0205, "WM_RBUTTONUP"},
{0x0206, "WM_RBUTTONDBLCLK"},{0x0207, "WM_MBUTTONDOWN"},{0x0208, "WM_MBUTTONUP"},{0x0209, "WM_MBUTTONDBLCLK"},
{0x020A, "WM_MOUSEWHEEL"},{0x020A, "WM_MOUSELAST"},{0x0209, "WM_MOUSELAST"},{0x0210, "WM_PARENTNOTIFY"},
{0x0211, "WM_ENTERMENULOOP"},{0x0212, "WM_EXITMENULOOP"},{0x0213, "WM_NEXTMENU"},{0x0214, "WM_SIZING"},
{0x0215, "WM_CAPTURECHANGED"},{0x0216, "WM_MOVING"},{0x0218, "WM_POWERBROADCAST"},{0x0219, "WM_DEVICECHANGE"},
{0x0220, "WM_MDICREATE"},{0x0221, "WM_MDIDESTROY"},{0x0222, "WM_MDIACTIVATE"},{0x0223, "WM_MDIRESTORE"},
{0x0224, "WM_MDINEXT"},{0x0225, "WM_MDIMAXIMIZE"},{0x0226, "WM_MDITILE"},{0x0227, "WM_MDICASCADE"},
{0x0228, "WM_MDIICONARRANGE"},{0x0229, "WM_MDIGETACTIVE"},{0x0230, "WM_MDISETMENU"},{0x0231, "WM_ENTERSIZEMOVE"},
{0x0232, "WM_EXITSIZEMOVE"},{0x0233, "WM_DROPFILES"},{0x0234, "WM_MDIREFRESHMENU"},{0x0281, "WM_IME_SETCONTEXT"},
{0x0282, "WM_IME_NOTIFY"},{0x0283, "WM_IME_CONTROL"},{0x0284, "WM_IME_COMPOSITIONFULL"},{0x0285, "WM_IME_SELECT"},
{0x0286, "WM_IME_CHAR"},{0x0288, "WM_IME_REQUEST"},{0x0290, "WM_IME_KEYDOWN"},{0x0291, "WM_IME_KEYUP"},
{0x02A1, "WM_MOUSEHOVER"},{0x02A3, "WM_MOUSELEAVE"},{0x0300, "WM_CUT"},{0x0301, "WM_COPY"},
{0x0302, "WM_PASTE"},{0x0303, "WM_CLEAR"},{0x0304, "WM_UNDO"},{0x0305, "WM_RENDERFORMAT"},
{0x0306, "WM_RENDERALLFORMATS"},{0x0307, "WM_DESTROYCLIPBOARD"},{0x0308, "WM_DRAWCLIPBOARD"},{0x0309, "WM_PAINTCLIPBOARD"},
{0x030A, "WM_VSCROLLCLIPBOARD"},{0x030B, "WM_SIZECLIPBOARD"},{0x030C, "WM_ASKCBFORMATNAME"},{0x030D, "WM_CHANGECBCHAIN"},
{0x030E, "WM_HSCROLLCLIPBOARD"},{0x030F, "WM_QUERYNEWPALETTE"},{0x0310, "WM_PALETTEISCHANGING"},{0x0311, "WM_PALETTECHANGED"},
{0x0312, "WM_HOTKEY"},{0x0317, "WM_PRINT"},{0x0318, "WM_PRINTCLIENT"},{0x0358, "WM_HANDHELDFIRST"},
{0x035F, "WM_HANDHELDLAST"},{0x0360, "WM_AFXFIRST"},{0x037F, "WM_AFXLAST"},{0x0380, "WM_PENWINFIRST"},
{0x038F, "WM_PENWINLAST"},{0x8000, "WM_APP"},{0x0400, "WM_USER"}
};
// 203 number of elemts...{0x0100, "WM_KEYFIRST"} no such thing
void TranslateWMessage(UINT uMsg, LPSTR cMsg)
{
 for(int i=0; i < sizeof(waWMArray)/sizeof(WMArray); i++)
 if(waWMArray[i].Code == uMsg)
 {
 lstrcpy(cMsg, waWMArray[i].Message);
 return;
 }
 char buff[255];
 wsprintf(buff, "INVALID MESSAGE: %d", uMsg);
 lstrcpy(cMsg, buff);
}

union KeyInfo
{
  // LPARAM
  LPARAM lParam;

  // bit-field
  struct {
    WORD nRepeatCount: 16;
    BYTE nScanCode : 8;
    BYTE nExtended : 1;
    BYTE nReserved : 4;
    BYTE nContext : 1;
    BYTE nPrevious : 1;
    BYTE nTransition : 1;
  } Bits;
};